<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.gym.mapper.MembershipRefundMapper">

    <!-- 환불 요청 -->
    <!-- 환불 이력 테이블에 insert -->
    <insert id="insertRefundRequestHistory" parameterType="com.project.gym.domain.MembershipRefundHistory">
        <selectKey resultType="long" keyProperty="refundId" order="BEFORE">
            SELECT SEQ_REFUND_HISTORY.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO MEMBERSHIP_REFUND_HISTORY (
            REFUND_ID,
            MEMBERSHIP_ID,
            REQUESTED_AT,
            REQUESTED_BY,
            REFUND_REASON,
            REFUND_STATUS
        ) VALUES (
            #{refundId},
            #{membershipId},
            SYSDATE,
            #{requestedBy},
            #{refundReason},
            0
        )
    </insert>

    <!-- 환불 로그 테이블에 insert -->
    <insert id="insertRefundRequestLog" parameterType="com.project.gym.domain.MembershipRefundLog">
        <selectKey resultType="long" keyProperty="logId" order="BEFORE">
            SELECT SEQ_REFUND_LOG.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO MEMBERSHIP_REFUND_LOG (
            LOG_ID,
            REFUND_ID,
            ACTION_TYPE,
            ACTION_DETAIL,
            ACTION_BY,
            ACTION_AT
        ) VALUES (
            #{logId},
            #{refundId},
            #{actionType},
            #{actionDetail},
            #{actionBy},
            SYSDATE
        )
    </insert>


    <!-- 환불 내역 -->
    <!-- 전체 환불 내역 -->
    <select id="selectAllRefundList" resultType="com.project.gym.domain.MembershipRefundHistory">
        SELECT
            r.REFUND_ID,
            r.MEMBERSHIP_ID,
            r.REQUESTED_AT,
            r.REQUESTED_BY,
            r.PROCESSED_AT,
            r.APPROVED_BY,
            r.REJECTED_BY,
            r.REFUND_REASON,
            r.REJECT_REASON,
            r.REFUND_AMOUNT,
            r.REFUND_STATUS,
            mem.NAME AS MEMBER_NAME
        FROM MEMBERSHIP_REFUND_HISTORY r
        JOIN MEMBERSHIP m ON r.MEMBERSHIP_ID = m.MEMBERSHIP_ID
        JOIN MEMBER mem ON m.MEMBER_ID = mem.MEMBER_ID
        ORDER BY r.REFUND_ID DESC
    </select>

    <!-- 멤버십 번호로 환불 내역 검색 -->
    <select id="selectRefundByMembershipId" resultType="com.project.gym.domain.MembershipRefundHistory">
        SELECT
            r.REFUND_ID,
            r.MEMBERSHIP_ID,
            r.REQUESTED_AT,
            r.REQUESTED_BY,
            r.PROCESSED_AT,
            r.APPROVED_BY,
            r.REJECTED_BY,
            r.REFUND_REASON,
            r.REJECT_REASON,
            r.REFUND_AMOUNT,
            r.REFUND_STATUS,
            mem.NAME AS MEMBER_NAME,
            m.MEMBERSHIP_TYPE
        FROM MEMBERSHIP_REFUND_HISTORY r
        JOIN MEMBERSHIP m ON r.MEMBERSHIP_ID = m.MEMBERSHIP_ID
        JOIN MEMBER mem ON m.MEMBER_ID = mem.MEMBER_ID
        WHERE
            r.MEMBERSHIP_ID = #{membershipId}
    </select>

    <!-- 키워드로 환불 내역 검색 -->
    <select id="selectRefundListByKeyword" resultType="com.project.gym.domain.MembershipRefundHistory">
        SELECT
            r.REFUND_ID,
            r.MEMBERSHIP_ID,
            r.REQUESTED_AT,
            r.REQUESTED_BY,
            r.PROCESSED_AT,
            r.APPROVED_BY,
            r.REJECTED_BY,
            r.REFUND_REASON,
            r.REJECT_REASON,
            r.REFUND_AMOUNT,
            r.REFUND_STATUS,
            mem.NAME AS MEMBER_NAME,
            m.MEMBERSHIP_TYPE
        FROM MEMBERSHIP_REFUND_HISTORY r
        JOIN MEMBERSHIP m ON r.MEMBERSHIP_ID = m.MEMBERSHIP_ID
        JOIN MEMBER mem ON m.MEMBER_ID = mem.MEMBER_ID
        <where>
            <if test="keyword != null">
                mem.NAME LIKE '%' || #{keyword} || '%'
            </if>
        </where>
    </select>

    <!-- -->
    <select id="selectRefundByRefundId" resultType="com.project.gym.domain.MembershipRefundHistory">
        SELECT
            r.REFUND_ID,
            r.MEMBERSHIP_ID,
            r.REQUESTED_AT,
            r.REQUESTED_BY,
            r.PROCESSED_AT,
            r.APPROVED_BY,
            r.REJECTED_BY,
            r.REFUND_REASON,
            r.REJECT_REASON,
            r.REFUND_AMOUNT,
            r.REFUND_STATUS,
            mem.NAME AS MEMBER_NAME,
            m.MEMBERSHIP_TYPE
        FROM MEMBERSHIP_REFUND_HISTORY r
        JOIN MEMBERSHIP m ON r.MEMBERSHIP_ID = m.MEMBERSHIP_ID
        JOIN MEMBER mem ON m.MEMBER_ID = mem.MEMBER_ID
        WHERE
            r.REFUND_ID = #{refundId}
    </select>


    <!-- 환불ID로 로그 목록 조회 -->
    <select id="selectLogListByRefundId" resultType="com.project.gym.domain.MembershipRefundLog">
        SELECT
            l.LOG_ID,
            l.REFUND_ID,
            l.ACTION_TYPE,
            l.ACTION_DETAIL,
            l.ACTION_BY,
            l.ACTION_AT,
            h.MEMBERSHIP_ID,
            h.REQUESTED_AT,
            h.REQUESTED_BY,
            h.PROCESSED_AT,
            h.APPROVED_BY,
            h.REJECTED_BY,
            h.REFUND_REASON,
            h.REJECT_REASON,
            h.REFUND_AMOUNT,
            h.REFUND_STATUS,
            m.MEMBERSHIP_TYPE,
            mem.NAME AS MEMBER_NAME
        FROM MEMBERSHIP_REFUND_LOG l
        JOIN MEMBERSHIP_REFUND_HISTORY h ON l.REFUND_ID = h.REFUND_ID
        JOIN MEMBERSHIP m ON h.MEMBERSHIP_ID = m.MEMBERSHIP_ID
        JOIN MEMBER mem ON m.MEMBER_ID = mem.MEMBER_ID
        WHERE
            l.REFUND_ID = #{refundId}
    </select>

</mapper>
