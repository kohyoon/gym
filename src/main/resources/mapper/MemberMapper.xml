<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.gym.mapper.MemberMapper">

    <!-- 회원 가입 -->
    <insert id="insertMember" parameterType="com.project.gym.domain.Member">

        <selectKey keyProperty="memberId" order="BEFORE" resultType="long">
            SELECT SEQ_MEMBER_ID.NEXTVAL FROM dual
        </selectKey>

        INSERT INTO MEMBER (
            MEMBER_ID, MEMBER_LOGIN_ID, MEMBER_PASSWORD, MEMBER_NAME,
            PHONE, EMAIL, GENDER,
            BIRTHDATE,
            STATUS, CREATED_AT
        ) VALUES (
            #{memberId}, #{memberLoginId}, #{memberPassword}, #{memberName},
            #{phone}, #{email}, #{gender},
            #{birthDate, javaType=java.time.LocalDate, jdbcType=DATE},
            'NORMAL', SYSDATE
        )
    </insert>

    <!-- 로그인 아이디 중복 확인 -->
    <select id="existsByLoginId" resultType="boolean">
        SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END
        FROM MEMBER
        WHERE MEMBER_LOGIN_ID = #{memberLoginId}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END
        FROM MEMBER
        WHERE EMAIL = #{email}
    </select>

    <select id="findAllMembers" resultType="com.project.gym.domain.Member">
        SELECT *
        FROM MEMBER
        ORDER BY MEMBER_ID DESC
    </select>

    <select id="findById" resultType="com.project.gym.domain.Member">
        SELECT *
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="findByLoginId" resultType="com.project.gym.domain.Member">
        SELECT *
        FROM MEMBER
        WHERE MEMBER_LOGIN_ID = #{memberLoginId}
    </select>

    <update id="updateMember">
        UPDATE MEMBER
        SET MEMBER_NAME = #{memberName},
            PHONE = #{phone},
            EMAIL = #{email},
            GENDER = #{gender},
            BIRTHDATE = #{birthDate},
            UPDATED_AT = SYSDATE
        WHERE MEMBER_ID = #{memberId}
    </update>

    <select id="searchByTypeAndKeyword" resultType="com.project.gym.domain.Member">
        SELECT *
        FROM MEMBER
        <where>
            <if test="searchType == 'memberName'">
                NAME LIKE '%' || #{keyword} || '%'
            </if>
            <if test="searchType == 'memberLoginId'">
                NAME LIKE '%' || #{keyword} || '%'
            </if>
            <if test="searchType == 'email'">
                EMAIL LIKE '%' || #{keyword} || '%'
            </if>
            <if test="searchType == 'phone'">
                PHONE LIKE '%' || #{keyword} || '%'
            </if>
            <if test="searchType == 'all' or searchType == null or keyword == null">
                (MEMBER_NAME LIKE '%' || #{keyword} || '%'
                OR EMAIL LIKE '%' || #{keyword} || '%'
                OR PHONE LIKE '%' || #{keyword} || '%')
            </if>
        </where>
    </select>

    <!-- 탈퇴 처리 -->
    <update id="updateWithdrawStatus">
        UPDATE MEMBER
        SET
            STATUS = 'WITHDRAW',
            UPDATED_AT = SYSDATE,
            MEMBER_LOGIN_ID = MEMBER_LOGIN_ID || '_WITHDRAW_' || MEMBER_ID
        WHERE
            MEMBER_ID = #{memberId}
    </update>




</mapper>
